
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Script";
    Duration = 10; 
    Button1 = "Ok";

    Text = "The Plains Version Loaded"

})

getgenv().Config = {
    Road = false,
    Delete = false,
    KillMutants = false,
    miscfeatures = false
}

local LOAD_TIME = tick()
local a = Instance.new("Part")
for b, c in pairs(getreg()) do
    if type(c) == "table" and #c then
        if rawget(c, "__mode") == "kvs" then
            for d, e in pairs(c) do
                if e == a then
                    getgenv().InstanceList = c;
                    break
                end
            end
        end
    end
end
local f = {}
function f.invalidate(g)
    if not InstanceList then
        return
    end
    for b, c in pairs(InstanceList) do
        if c == g then
            InstanceList[b] = nil;
            return g
        end
    end
end
if not cloneref then
    getgenv().cloneref = f.invalidate
end

getrenv().Visit = cloneref(game:GetService("Visit"))
getrenv().MarketplaceService = cloneref(game:GetService("MarketplaceService")) -- // theres a reason why thats referenced in the roblox environment
getrenv().HttpRbxApiService = cloneref(game:GetService("HttpRbxApiService"))
getrenv().HttpService = cloneref(game:GetService("HttpService"))
local CoreGui = cloneref(game:GetService("CoreGui"))
local ContentProvider = cloneref(game:GetService("ContentProvider"))
local RunService = cloneref(game:GetService("RunService"))
local Stats = cloneref(game:GetService("Stats"))
local Players = cloneref(game:GetService("Players"))
local NetworkClient = cloneref(game:GetService("NetworkClient"))
local VirtualUser = cloneref(game:GetService("VirtualUser"))
local ProximityPromptService = cloneref(game:GetService("ProximityPromptService"))
local Lighting = cloneref(game:GetService("Lighting"))
local AssetService = cloneref(game:GetService("AssetService"))
local TeleportService = cloneref(game:GetService("TeleportService"))
local NetworkSettings = settings().Network
local UserGameSettings = UserSettings():GetService("UserGameSettings")
getrenv().getgenv = clonefunction(getgenv)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")
local message = Instance.new("Message")
local Player = game.Players.LocalPlayer
local function position(Instance,cframe)
    local args = {
        [1] = Instance,
        [2] = cframe
    }
    game:GetService("ReplicatedStorage"):WaitForChild("movebuilding"):FireServer(unpack(args))   
end
local function spawnballoon(Position,object)
    local args = {
        [1] = game:GetService("ReplicatedStorage").Assets.RareItems["120"].BalloonGun,
        [2] = object,
        [3] = Position,
        [4] = Vector3.yAxis
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("GunFramework_CustomHit"):FireServer(unpack(args))            
end

message.Text = "Script Succesfully Loading!"
message.Name =
    "ðŸ’‹â€  ð“ð“˜ð“–ð“–ð“â€€! ð“—ð“ð“’ð“š  â€ðŸ’‹"
message.Parent = CoreGui

task.wait(0.25)


task.spawn(function()
    local discord = loadstring(game:HttpGet("https://raw.githubusercontent.com/artemy133563/Utilities/main/WyvernMenu",true))()
    local win = discord:Window("Connect Hub | Desert, The Plains | Support")
    local serv = win:Server("The Plains Version", "http://www.roblox.com/asset/?id=6031075938")
    local main = serv:Channel("Home")
    main:Label("\nHello Thank For Using My script")
    main:Label("Check Discord to see our available update!")
    main:Label("PC Executor? Press F2 To Use Gui In Game")
    main:Seperator()

main:Toggle("Anti Kick (Client)", false, function(bool)
    if bool == "true" then
        local kick;
        kick = hookmetamethod(game, "__namecall", function(obj, ...)
            local args = {...}
            local method = getnamecallmethod()
            if method == "Kick" then
                if args[1] then
                    discord:Notification("Kick Attempt", "There was an attempt to kick player from client.", "Ok!")
                end
                return nil
            end
            return kick(obj, unpack(args))
        end)
    end
end)

main:Seperator()
main:Button("Update Logs", function()
    discord:Notification("Updates", "New All", "Ok!")
end)

main:Button("Credits", function()
    discord:Notification("Credits", "Discord: vzyat.zzz", "Ok!")
end)

main:Button("Custom Color", function()
    Players.LocalPlayer.PlayerGui.mainui.Distance.TextColor3 = Color3.fromRGB(50, 100, 255)
    Players.LocalPlayer.PlayerGui.mainui.bars.stamina.bar.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    Players.LocalPlayer.PlayerGui.mainui.bars.stamina.bar.downSymbol.TextColor3 = Color3.fromRGB(0, 255, 255)
    Players.LocalPlayer.PlayerGui.mainui.bars.stamina.TextLabel.TextColor3 = Color3.fromRGB(0, 0, 255)
    Players.LocalPlayer.PlayerGui.mainui.bars.hunger.bar.downSymbol.TextColor3 = Color3.fromRGB(255, 0, 0)
    Players.LocalPlayer.PlayerGui.mainui.bars.hunger.bar.BackgroundColor3 = Color3.fromRGB(191, 0, 0)
    Players.LocalPlayer.PlayerGui.NewUI.Crosshair.Line1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Players.LocalPlayer.PlayerGui.NewUI.Crosshair.Line2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    discord:Notification("Done!", "Color changed.", "Ok!")
end)

main:Button("Discord Server", function()
    if setclipboard then
        setclipboard("https://discord.gg/ABcHcjaKeH")
    end 
    discord:Notification("Done!", "Link copied in clipboard", "Ok!")
end)


main:Label("             The Plains Version Loaded In " ..
string.format("%s seconds.", string.format("%.2f", tostring(tick() - LOAD_TIME))))
pcall(function()
message:Destroy()
end)

local main = serv:Channel("Main")

    main:Button("Collect BottleCaps", function()
        for i,v in pairs(game.Workspace.BuildingItemStorage:GetChildren()) do
            if v.Name == "5Pile" or v.Name == "BottleCap" or v.Name == "10pile" or v.Name == "15Pile" or v.Name == "20pile" or v.Name == "5stack" or v.Name == "15pile"or v.Name == "5pile" then
                local modeltodelete = v

                for i,v in pairs(v:GetDescendants()) do
                    if v:IsA("MeshPart") then
                        ReplicatedStorage.Network.TakeBottleCap:FireServer(v)
                    end
                end                
                modeltodelete:Destroy()
            end
        end
        discord:Notification("Done!", "Collected BottleCap.", "Ok!")
    end)

    main:Toggle("Auto Kill Mutants", false, function(state)
        task.spawn(function()
            Config.KillMutants = state
            while true do
                if not Config.KillMutants then return end
                for i,v in pairs(game.Workspace:GetChildren()) do
                    if (v.Name:lower() == "mutant" or v.Name:lower() == "sprinter" or v.Name:lower() == "buff") and v:FindFirstChildWhichIsA("Humanoid").Health > 0 then
                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("GunFramework_RequestDamage"):FireServer(game.ReplicatedStorage.Assets.Weapons.GOLDAK47,v)   
                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("GunFramework_RequestDamage"):FireServer(game.ReplicatedStorage.Assets.Weapons.GOLDAK47,v)              
                    end
                end
                
                if game.Workspace:FindFirstChild("BuildingItemStorage") then
                    for i,v in pairs(game.Workspace.BuildingItemStorage:GetChildren()) do
                        if (v:FindFirstChildWhichIsA("Humanoid")) and v:FindFirstChildWhichIsA("Humanoid").Health > 0 then
                            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("GunFramework_RequestDamage"):FireServer(game.ReplicatedStorage.Assets.Weapons.GOLDAK47,v)   
                            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("GunFramework_RequestDamage"):FireServer(game.ReplicatedStorage.Assets.Weapons.GOLDAK47,v)              
                        end
                    end
                end
                task.wait(.1)
            end
        end)
    end)

main:Toggle("Auto Road", false, function(state)
task.spawn(function()
    Config.Road = state
    while true do
        if not Config.Road then return end

        for _,v in ipairs(Workspace.Map.Roads:GetChildren()) do
            game.Players.LocalPlayer.Character:PivotTo(v:GetPivot());
        end 
        LocalPlayer.Character:PivotTo(LocalPlayer.Character:GetPivot() + Vector3.new(0, 10, 0));
        task.wait(4)
    end
end)
end)

main:Label("Map")

main:Dropdown("Spawn Location (Need Be The Host)",{"Shop", "Church", "RandomShop", "Trailer", "Model", "CampSiteasset", "Cabin House", "greenhouse", "BigHouse Farm2", "Cabin In the Woods", "Wrecked Building", "FarmHouse1", "Farmhouse varient", "Farmhouse varientwood1", "LargeBarn", "Stable", "ShedAsset1"}, function(value)
    if value == "Shop" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.Shop, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))
        discord:Notification("Done!", "Location Spawned.", "Ok!")
    elseif value == "Church" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.Church, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))
        discord:Notification("Done!", "Location Spawned.", "Ok!")
    elseif value == "RandomShop" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.RandomShop, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))
        discord:Notification("Done!", "Location Spawned.", "Ok!")
    elseif value == "Trailer" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.Trailer, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))
        discord:Notification("Done!", "Location Spawned.", "Ok!")
    elseif value == "Model" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.Model, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))
        discord:Notification("Done!", "Location Spawned.", "Ok!")
    elseif value == "CampSiteasset" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.CampSiteasset, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!")  
    elseif value == "Cabin House" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings["Cabin House"], LocalPlayer.Character:GetPivot() * CFrame.new(0, 10, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!")  
    elseif value == "greenhouse" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.greenhouse, LocalPlayer.Character:GetPivot() * CFrame.new(0, 10, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "BigHouse Farm2" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings["BigHouse Farm2"], LocalPlayer.Character:GetPivot() * CFrame.new(0, 10, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "Cabin In the Woods" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings["Cabin In the Woods"], LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "Wrecked Building" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings["Wrecked Building"], LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "FarmHouse1" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.FarmHouse1, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "Farmhouse varient" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings["Farmhouse varient"], LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "Farmhouse varientwood1" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings["Farmhouse varientwood1"], LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "LargeBarn" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.LargeBarn, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "Stable" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.Stable, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    elseif value == "ShedAsset1" then
        ReplicatedStorage.spawnbuilding:FireServer(ReplicatedStorage.buldings.ShedAsset1, LocalPlayer.Character:GetPivot() * CFrame.new(0, -5, -30))  
        discord:Notification("Done!", "Location Spawned.", "Ok!") 
    end
end)

main:Label("Weapons")

main:Button("Inf Ammo", function()
    local function adjustGunAmount(gunName, amount, recoil, spread)
        for _, gun in pairs(workspace:GetChildren()) do
            if gun.Name == gunName then
                game:GetService("ReplicatedStorage").Network.GunFramework_AdjustAmount:FireServer(gun, amount, recoil, spread)
            end
        end
    end
    
    adjustGunAmount("Pistol", 0/0, 0/0, 0/0)
    adjustGunAmount("Mac10", 0/0, 0/0, 0/0)
    adjustGunAmount("AK47", 0/0, 0/0, 0/0)
    adjustGunAmount("GOLDAK47", 0/0, 0/0, 0/0)
    adjustGunAmount("PumpShotgun", 0/0, 0/0, 0/0)
    adjustGunAmount("RPG", 0/0, 0/0, 0/0)
    adjustGunAmount("MiniGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Raygun", 0/0, 0/0, 0/0)
    adjustGunAmount("BalloonGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Red PaintballGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Blue PaintballGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Green PaintballGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Pink PaintballGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Yellow PaintballGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Raygun", 0/0, 0/0, 0/0)
    adjustGunAmount("RopeGun", 0/0, 0/0, 0/0)
    adjustGunAmount("DEAGLE", 0/0, 0/0, 0/0)
    adjustGunAmount("PlatAK47", 0/0, 0/0, 0/0)
    adjustGunAmount("GoldMiniGun", 0/0, 0/0, 0/0)
    adjustGunAmount("Deagle", 0/0, 0/0, 0/0)
    adjustGunAmount("GoldDeagle", 0/0, 0/0, 0/0)
    adjustGunAmount("GoldRPG", 0/0, 0/0, 0/0)
    discord:Notification("Done!", "Inf ammo in weapons succesfully loaded.", "Ok!")
end)

main:Button("No FireRate | Solara Not Support", function()
    for i, v in next, getgc(true) do
        if type(v) == "table" and rawget(v, "BulletDamage") then
            v.BulletDamage = 10000
            v.FireMode = "Auto" 
            v.FireRate = 0
            v.BulletSpeed = 250
            v.ReloadTime = 0
            v.MinRecoilX = 0
            v.MinRecoilY = 0
            v.MinRecoilZ = 0
            v.MaxRecoilX = 0
            v.MaxRecoilY = 0
            v.MaxRecoilZ = 0
            v.BulletDistance = 9e17
            v.MagSize = math.huge
            v.CurrentMagSize = math.huge
            v.NoMuzzleFlash = true
        end
    end
    discord:Notification("Done!", "No firerate in weapons succesfully loaded.", "Ok!")
end)


local items = serv:Channel("Items")

items:Label("Soon | Maybe Not)")

local vehicle = serv:Channel("Vehicle")

vehicle:Label("Before you get Infinite Oil+Fuel, start the Engine FIRST!!!")

vehicle:Dropdown("Choose Vehicle To Get Infinite Oil+Fuel",{"Sedan", "Van", "Kei", "Formula F1", "Camper Van", "FlameTruck", "ATV", "SUV", "URUS", "R1702", "Apex Racer", "Sport Coupe", "Royal Rover", "Phantom", "Stinger", "Wagon", "Heli", "Classic Bus"}, function(value)
    if value == "Sedan" then
        for i = 1,5 do
            workspace.Sedan.connection:FireServer(workspace.Sedan.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Van" then
        for i = 1,5 do
            workspace.Van.connection:FireServer(workspace.Van.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Kei" then
        for i = 1,5 do
            workspace.KEI.Kei.connection:FireServer(workspace.KEI.Kei.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Formula F1" then
        for i = 1,5 do
            workspace.F1.F1.connection:FireServer(workspace.F1.F1.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Camper Van" then
        for i = 1,5 do
            workspace["Camper Van"]["Camper Van"].connection:FireServer(workspace["Camper Van"]["Camper Van"].values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Nightshade" then
        for i = 1,5 do
            workspace.Van.connection:FireServer(workspace.Nightshade.Nightshade.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "FlameTruck" then
        for i = 1,5 do
            workspace.Truck.Truck.connection:FireServer(workspace.Truck.Truck.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "ATV" then
        for i = 1,5 do
            workspace.ATV.ATV.connection:FireServer(workspace.ATV.ATV.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "SUV" then
        for i = 1,5 do
            workspace.SUV.SUV.connection:FireServer(workspace.SUV.SUV.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "URUS" then
        for i = 1,5 do
            workspace.URUS.URUS.connection:FireServer(workspace.URUS.URUS.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "R1702" then
        for i = 1,5 do
            workspace.R1702.R1702.connection:FireServer(workspace.R1702.R1702.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Apex Racer" then
        for i = 1,5 do
            workspace["Apex Racer"]["Apex Racer"].connection:FireServer(workspace["Apex Racer"]["Apex Racer"].values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Sport Coupe" then
        for i = 1,5 do
            workspace["Sport Coupe"]["Sport Coupe"].connection:FireServer(workspace["Sport Coupe"]["Sport Coupe"].values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Phantom" then
        for i = 1,5 do
            workspace.Phantom.Phantom.connection:FireServer(workspace.Phantom.Phantom.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Royal Rover" then
        for i = 1,5 do
            workspace["Royal Rover"]["Royal Rover"].connection:FireServer(workspace["Royal Rover"]["Royal Rover"].values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Wagon" then
        for i = 1,5 do
            workspace.Wagon.Wagon.connection:FireServer(workspace.Wagon.Wagon.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Heli" then
        for i = 1,5 do
            workspace.Heli.Heli.connection:FireServer(workspace.Heli.Heli.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Heli" then
        for i = 1,5 do
            workspace.Heli.Heli.connection:FireServer(workspace.Heli.Heli.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")  
    elseif value == "Stinger" then
        for i = 1,5 do
            workspace.Stinger.Stinger.connection:FireServer(workspace.Stinger.Stinger.values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")
    elseif value == "Classic Bus" then
        for i = 1,5 do
            workspace["Classic Bus"]["Classic Bus"].connection:FireServer(workspace["Classic Bus"]["Classic Bus"].values.rpm, - 9e17)
        end
        discord:Notification("Done!", "Check Fuel And Oil\nNot Work? Press Again\nOr You Not Start Engine.", "Ok!")
    end
end)

vehicle:Label("Bring Vehicle")

vehicle:Dropdown("Choose Vehicle",{"Sedan", "Van", "Kei", "Formula F1", "Camper Van", "Nightshade", "FlameTruck", "ATV", "SUV", "URUS", "R1702", "Apex Racer", "Sport Coupe", "Royal Rover", "Phantom", "Stinger", "Wagon", "Heli", "Classic Bus"}, function(value)
    if value == "Sedan" then
        game:GetService("Workspace").Sedan:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")   
    elseif value == "Van" then
        game:GetService("Workspace").Van:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Kei" then
        game:GetService("Workspace").KEI.Kei:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Formula F1" then
        game:GetService("Workspace").F1.F1:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Camper Van" then
        game:GetService("Workspace")["Camper Van"]["Camper Van"]:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Nightshade" then
        game:GetService("Workspace").Nightshade.Nightshade:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "FlameTruck" then
        game:GetService("Workspace").Truck.Truck:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "ATV" then
        game:GetService("Workspace").ATV.ATV:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!") 
    elseif value == "SUV" then
        game:GetService("Workspace").SUV.SUV:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "URUS" then
        game:GetService("Workspace").URUS.URUS:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "R1702" then
        game:GetService("Workspace").R1702.R1702:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Apex Racer" then
        game:GetService("Workspace")["Apex Racer"]["Apex Racer"]:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Sport Coupe" then
        game:GetService("Workspace")["Sport Coupe"]["Sport Coupe"]:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Royal Rover" then
        game:GetService("Workspace")["Royal Rover"]["Royal Rover"]:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Phantom" then
        game:GetService("Workspace").Phantom.Phantom:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Stinger" then
        game:GetService("Workspace").Stinger.Stinger:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Wagon" then
        game:GetService("Workspace").Wagon.Wagon:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Heli" then
        game:GetService("Workspace").Heli.Heli:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    elseif value == "Classic Bus" then
        game:GetService("Workspace")["Classic Bus"]["Classic Bus"]:PivotTo(LocalPlayer.Character:GetPivot() * CFrame.new(0, 0, -40))
        discord:Notification("Done!", "Bring this vehicle done.", "Ok!")  
    end
end)

vehicle:Label("Goto Vehicle")

vehicle:Dropdown("Choose Vehicle",{"Sedan", "Van", "Kei", "Formula F1", "Camper Van", "Nightshade", "FlameTruck", "ATV", "SUV", "URUS", "R1702", "Apex Racer", "Sport Coupe", "Royal Rover", "Phantom", "Stinger", "Wagon", "Heli", "Classic Bus"}, function(value)
    if value == "Sedan" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Sedan:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")  
    elseif value == "Van" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Van:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Kei" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.KEI.Kei:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Formula F1" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.F1.F1:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Camper Van" then
        game.Players.LocalPlayer.Character:PivotTo(workspace["Camper Van"]["Camper Van"]:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Nightshade" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Nightshade.Nightshade:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "FlameTruck" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Truck.Truck:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "ATV" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.ATV.ATV:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")    
    elseif value == "SUV" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.SUV.SUV:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "URUS" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.URUS.URUS:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "R1702" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.R1702.R1702:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Apex Racer" then
        game.Players.LocalPlayer.Character:PivotTo(workspace["Apex Racer"]["Apex Racer"]:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Sport Coupe" then
        game.Players.LocalPlayer.Character:PivotTo(workspace["Sport Coupe"]["Sport Coupe"]:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Royal Rover" then
        game.Players.LocalPlayer.Character:PivotTo(workspace["Royal Rover"]["Royal Rover"]:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Phantom" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Phantom.Phantom:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Stinger" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Stinger.Stinger:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Wagon" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Wagon.Wagon:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Heli" then
        game.Players.LocalPlayer.Character:PivotTo(workspace.Heli.Heli:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    elseif value == "Classic Bus" then
        game.Players.LocalPlayer.Character:PivotTo(workspace["Classic Bus"]["Classic Bus"]:GetPivot() * CFrame.new(0, 20, 0))
        discord:Notification("Done!", "Goto this vehicle done.", "Ok!")   
    end
end)

vehicle:Label("Flip Vehicle")

vehicle:Dropdown("Choose Vehicle | Solara Not Support",{"Sedan", "Van", "Kei", "Formula F1", "Camper Van", "Nightshade", "FlameTruck", "ATV", "SUV", "URUS", "R1702", "Apex Racer", "Sport Coupe", "Royal Rover", "Phantom", "Stinger", "Wagon", "Heli", "Classic Bus"}, function(value)
    if value == "Sedan" then
        local req = workspace.Sedan["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Van" then
        local req = workspace.Van["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Kei" then
        local req = workspace.KEI.Kei["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Formula F1" then
        local req = workspace.F1.F1["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Camper Van" then
        local req = workspace["Camper Van"]["Camper Van"]["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Nightshade" then
        local req = workspace.NightShade.NightShade["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "FlameTruck" then
        local req = workspace.Truck.Truck["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "ATV" then
        local req = workspace.ATV.ATV["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "SUV" then
        local req = workspace.SUV.SUV["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "URUS" then
        local req = workspace.URUS.URUS["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "R1702" then
        local req = workspace.R1702.R1702["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Apex Racer" then
        local req = workspace["Apex Racer"]["Apex Racer"]["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Sport Coupe" then
        local req = workspace["Sport Coupe"]["Sport Coupe"]["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Royal Rover" then
        local req = workspace["Royal Rover"]["Royal Rover"]["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Phantom" then
        local req = workspace.Phantom.Phantom["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Stinger" then
        local req = workspace.Stinger.Stinger["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Wagon" then
        local req = workspace.Wagon.Wagon["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Heli" then
        local req = workspace.Heli.Heli["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    elseif value == "Classic Bus" then
        local req = workspace["Classic Bus"]["Classic Bus"]["A-Chassis Tune"]
        local m = require(req)
        m.AutoFlip = true
        discord:Notification("Done!", "Auto flip this vehicle.", "Ok!")  
    end
end)

vehicle:Label("Misc")

vehicle:Button("Remove Speed Limit", function()
    for _, engine in ipairs(workspace:GetChildren()) do
        if engine.Name == "Engine" then
            engine.maxgear.Value = math.huge
        end
    end
    discord:Notification("Done!", "Speed limit removed.", "Ok!") 
end)

vehicle:Textbox("Vehicle Speed | Mobile Not Support", "Type Speed Here...", true, function(t)
    local tt = tonumber(t)
    if type(tt) == "number" then
        for _, engine in ipairs(workspace:GetChildren()) do
            if engine.Name == "Engine" then
                engine.hp.Value = (tt)
            end
        end
        discord:Notification("Success!", "Vehicle Speed has been set to " .. tostring(tt), "Ok!")
    else
        discord:Notification("Hold up!", "Type Number.", "Ok!")
    end
end)

vehicle:Label("Put standart ENGINE!! at 0 meters\n or vehicle speed will not work.")

local games = serv:Channel("Games")

local antikickonteleport = false
games:Toggle("Inject Anti Kick on Teleport", false, function(bool)
    if bool then
        antikickonteleport = true
    else
        antikickonteleport = false
    end
end)
games:Label("\nBelow is a list of subplaces of this game.\nChoose the one that you want to be teleported into!")
local places = {}
local placeids = {}
local pp = AssetService:GetGamePlacesAsync()
while true do
    for _, place in pp:GetCurrentPage() do
        table.insert(places, place.Name)
        table.insert(placeids, place.PlaceId)
    end
    if pp.IsFinished then
        break
    end
    pp:AdvanceToNextPageAsync()
end
games:Dropdown("Subplace/Hidden Games List", places, function(x)
    local index = nil
    for i, name in ipairs(places) do
        if name == x then
            index = i
            break
        end
    end

    if index then
        local placeId = placeids[index]
        discord:Notification("Teleporting", "Teleporting to...\n" .. x .. "\nGame ID: " .. placeId, "Ok!")
        if antikickonteleport then
            pcall(function()
                queueonteleport(
                    'local kick; kick = hookmetamethod(game, "__namecall", function(obj, ...) local args = {...} local method = getnamecallmethod() if method == "Kick" then if args[1] then print("...") end return nil end return kick(obj, unpack(args)) end)')
            end)
            TeleportService:Teleport(placeId, Players.LocalPlayer)
        else
            TeleportService:Teleport(placeId, Players.LocalPlayer)
        end
    else
        discord:Notification("Error", "Place not found... Well this shouldn't have happened | WTF", "Ok!")
    end
end)
games:Label("If you only see the main game, no other subplaces found")
games:Seperator()
games:Textbox("Pause gameplay for a specified amount of time",
    "How long do you want to pause the game for? (In seconds)", true, function(t)
        local tt = tonumber(t)
        if type(tt) == "number" then
            Players.LocalPlayer.GameplayPaused = true
            task.wait()
            Players.LocalPlayer.GameplayPaused = false
            task.wait()
            Players.LocalPlayer.GameplayPaused = true
            task.wait(tt)
            Players.LocalPlayer.GameplayPaused = false
        else
            discord:Notification("Error", "You must enter a number. (In seconds)", "Ok!")
        end
    end)
games:Label("Pausing the gameplay will overlay everything,\nEvery UI becomes unclickable")
games:Seperator()
games:Button("Teleport to Smallest Server", function()
    local gameapi = "https://games.roblox.com/v1/games/"
    local _place = game.PlaceId
    local _servers = gameapi .. _place .. "/servers/Public?sortOrder=Asc&limit=100"
    function ListServers(cursor)
        local Raw = game:HttpGet(_servers .. ((cursor and "&cursor=" .. cursor) or ""))
        return HttpService:JSONDecode(Raw)
    end
    local Server, Next;
    repeat
        local Servers = ListServers(Next)
        Server = Servers.data[1]
        Next = Servers.nextPageCursor
    until Server
    discord:Notification("Teleporting", "Teleporting to...\n" .. game.PlaceId .. "\nJob ID: " .. Server.id, "Ok!")
    if antikickonteleport then
        pcall(function()
            queueonteleport(
                'local kick; kick = hookmetamethod(game, "__namecall", function(obj, ...) local args = {...} local method = getnamecallmethod() if method == "Kick" then if args[1] then print("...") end return nil end return kick(obj, unpack(args)) end)')
        end)
        TeleportService:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer)
    else
        TeleportService:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer)
    end
    discord:Notification("Done!", "Joining In Small Server", "Ok!")
end)

games:Button("Force Close Roblox App", function()
    game:Shutdown()
    discord:Notification("Done!", "Game Crashed", "Ok!")
end)
games:Label("Current Game's Place ID:\n" .. game.PlaceId)
games:Label("Current Game's Universe ID:\n" .. game.GameId)
games:Label("Current Game's Job ID: \n" .. game.JobId)

local players = serv:Channel("Player")


players:Button("Inf Jump", function()
    loadstring(game:HttpGet("https://pastefy.app/2ZKdOO9N/raw",true))()
    discord:Notification("Done!", "Inf jump succesfully loaded.", "Ok!")
end)

players:Button("Inf Stamina", function()
    loadstring(game:HttpGet("https://pastefy.app/uqDKxjaZ/raw",true))()
    discord:Notification("Done!", "Inf stamina fuccesfully loaded.", "Ok!")
end)

players:Button("Godmode (Broken)", function()
    loadstring(game:HttpGet("https://pastefy.app/6H6jKOWp/raw",true))()
    discord:Notification("Done!", "Godmode succesfully loaded.", "Ok!")
end)

players:Button("Get 8x8 BackPack", function()
    ReplicatedStorage.Network.BACKPACK_CREATE:InvokeServer(ReplicatedStorage.Assets.RareItems["6"].Backpack_8)
    discord:Notification("Done!", "Backpack succesfully getting.", "Ok!")
end)

players:Button("Get 6x6 BackPack", function()
    ReplicatedStorage.Network.BACKPACK_CREATE:InvokeServer(ReplicatedStorage.Assets.RareItems["3"].Backpack_6)
    discord:Notification("Done!", "Backpack succesfully getting.", "Ok!")
end)

players:Button("Get All Meters Badges", function()
    game.Players.LocalPlayer.Character:PivotTo(CFrame.new(-41953.453125, 539.2250366210938, -592186.0625)) task.wait(1)
    game.Players.LocalPlayer.Character:PivotTo(CFrame.new(123.0855484008789, 10.462929725646973, 8275.0888671875)) task.wait(1.1)
    task.wait(2)
    discord:Notification("Done!", "Succesfully getting badges.", "Ok!")
end)

players:Label("\nUses SetLocalPlayerInfo() to change your info!")
players:Textbox("Spoof as player with User ID (Client)", "Enter your new User ID...", false, function(t)
    local tt = tonumber(t)
    if type(tt) == "number" then
        local name = Players:GetNameFromUserIdAsync(tt)
        Players:SetLocalPlayerInfo(tt, name, name, Enum.MembershipType.Premium, false)
        discord:Notification("Success", "You are now " .. name .. "! (" .. tt .. ")", "Ok!")
    else
        discord:Notification("Failed", "Please put a correct User ID", "Ok!")
    end
end)
players:Button("Spoof yourself as the Game", function()
    local name = Players:GetNameFromUserIdAsync(tonumber(game.CreatorId))
    Players:SetLocalPlayerInfo(game.CreatorId, name, name, Enum.MembershipType.Premium, false)
    discord:Notification("Success", "You are now " .. name .. "! (" .. game.CreatorId .. ")", "Ok!")
end)
players:Seperator()
players:Toggle("Auto Hide Other Players", false, function(bool)
    if bool then
        local usernames = {}
        while task.wait(0.1) do
            local players = Players:GetPlayers()
            local localPlayer = Players.LocalPlayer
            local cusernames = {}
            for _, player in ipairs(players) do
                if player ~= localPlayer then
                    table.insert(cusernames, player.Name)
                    if not usernames[player.Name] then
                        usernames[player.Name] = true
                    end
                end
            end
            for username, _ in pairs(usernames) do
                if not table.find(cusernames, username) then
                    usernames[username] = nil
                end
            end
            local models = game.Workspace:GetChildren()
            for _, model in ipairs(models) do
                if model:IsA("Model") then
                    if usernames[model.Name] then
                        model:Destroy()
                    end
                end
            end
            if Visit:FindFirstChild("Part") then
                break
            end
        end
    else
        local kill = Instance.new("Part")
        kill.Parent = Visit
        task.wait(0.2)
        kill:Destroy()
    end
end)
players:Toggle("Show Hidden GUIs of LocalPlayer", false, function(bool)
    if bool then
        guis = {}
        for i, v in pairs(Players.LocalPlayer:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
            if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and not v.Visible then
                v.Visible = true
                if not FindInTable(guis, v) then
                    table.insert(guis, v)
                end
            end
        end
    elseif not bool then
        for i, v in pairs(guis) do
            v.Visible = false
        end
        guis = {}
    end
end)
players:Toggle("Anti AFK", false, function(bool)
    if bool then
        Players.LocalPlayer.Idled:connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end
end)

local signal
players:Seperator()
players:Button("Create Waypoint at Current Position", function()
    if not Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        discord:Notification("Failure", "HumanoidRootPart is missing from character", "Ok!")
        return
    end
    getgenv().pos = Players.LocalPlayer.Character.HumanoidRootPart.Position
    discord:Notification("Success", "Created waypoint at " .. tostring(getgenv().pos), "Ok!")
    if getgenv().addeduis then
        return
    else
        players:Button("Teleport to Saved Waypoint", function()
            Players.LocalPlayer.Character:MoveTo(getgenv().pos)
        end)
        players:Button("Set Spawnpoint to Saved Waypoint", function()
            signal = Players.LocalPlayer.CharacterAdded:Connect(function()
                Players.LocalPlayer.Character:MoveTo(getgenv().pos)
            end)
            players:Button("Delete Spawnpoint at Saved Waypoint", function()
                signal:Disconnect()
            end)
        end)
        players:Button("Delete Saved Waypoint", function()
            getgenv().pos = nil
        end)
    end
    getgenv().addeduis = true
end)

local misc = serv:Channel("Misc")

misc:Textbox("Player Speed", "Type Speed Here...", true, function(t)
    local tt = tonumber(t)
    if type(tt) == "number" then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (tt)
        discord:Notification("Success!", "Player Speed has been set to " .. tostring(tt), "Ok!")
    else
        discord:Notification("Hold up!", "Type Number.", "Ok!")
    end
end)

misc:Textbox("Field Of View", "Type Field Of View Here...", true, function(t)
    local tt = tonumber(t)
    if type(tt) == "number" then
        workspace.Camera.FieldOfView = (tt)
        discord:Notification("Success!", "Field Of View has been set to " .. tostring(tt), "Ok!")
    else
        discord:Notification("Hold up!", "Type Number.", "Ok!")
    end
end)

misc:Textbox("Gravity", "Type Gravity Here...", true, function(t)
    local tt = tonumber(t)
    if type(tt) == "number" then
        workspace.Gravity = (tt)
        discord:Notification("Success!", "Gravity has been set to " .. tostring(tt), "Ok!")
    else
        discord:Notification("Hold up!", "Type Number.", "Ok!")
    end
end)

misc:Button("Telekinesis Gun", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/KduE9A6z"))()
    discord:Notification("Done!", "Getting tool.", "Ok!")
end)

misc:Button("Teleport Tool", function()
    loadstring(game:HttpGet("https://pastefy.app/spn8O2kz/raw",true))()
    discord:Notification("Done!", "Getting tool.", "Ok!")
end)

misc:Button("Cactus Spawner", function()
    mouse = game.Players.LocalPlayer:GetMouse()
    tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "Cactus"
    tool.Activated:connect(function()
    local pos = mouse.Hit+Vector3.new(0,2.5,0)
    pos = CFrame.new(pos.X,pos.Y,pos.Z)
    game:GetService("ReplicatedStorage").breaksomething:InvokeServer(pos)
    end)
    tool.Parent = game.Players.LocalPlayer.Backpack
    discord:Notification("Done!", "Getting tool.", "Ok!")
end)

misc:Button("Balloon Spawner", function()
    local BalloonTool = Instance.new("Tool",Player.Backpack)
    BalloonTool.Name = "Balloon"
    BalloonTool.RequiresHandle = false
    BalloonTool.Activated:Connect(function()
        if Player:GetMouse().Target then
            spawnballoon(Player:GetMouse().Hit.Position,Player:GetMouse().Target)
        end
    end)
    discord:Notification("Done!", "Getting tool.", "Ok!")
end)

misc:Toggle("Force Full Bright Lighting", false, function(state)
    task.spawn(function()
        Config.miscfeatures = state
        while true do
            if not Config.miscfeatures then return end
            Lighting.Brightness = 2
            Lighting.ClockTime = 14
            Lighting.FogEnd = 100000
            Lighting.GlobalShadows = false
            Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
            task.wait()
        end
    end)
    end)

local network = serv:Channel("Network")
network:Textbox("KBPS Limit", "Type a big number to have no limit...", true, function(t)
    local tt = tonumber(t)
    if type(tt) == "number" then
        NetworkClient:SetOutgoingKBPSLimit(tt)
        discord:Notification("Success!", "KBPS Limit has been set to " .. tostring(tt), "Okay!")
    else
        discord:Notification("Hold up!", "KBPS Limit must be a number.", "Okay!")
    end
end)
network:Seperator()
network:Label("Simulates lag/delay from client -> server.")
local drop = network:Dropdown("Delay Intensiveness", {"Normal", "Mild", "Medium", "Severe", "No Connection"},
    function(bool)
        print(bool)
        if bool == "Normal" then
            NetworkSettings.IncomingReplicationLag = 0
        elseif bool == "Mild" then
            NetworkSettings.IncomingReplicationLag = 1
        elseif bool == "Medium" then
            NetworkSettings.IncomingReplicationLag = 2
        elseif bool == "Severe" then
            NetworkSettings.IncomingReplicationLag = 3
        elseif bool == "No Connection" then
            NetworkSettings.IncomingReplicationLag = 10
        end
    end)
network:Seperator()
network:Button("Show Average Client -> Server Ping", function()
    discord:Notification("Average Ping", math.round(Players.LocalPlayer:GetNetworkPing() * 1000) .. "ms", "Okay!")
end)

network:Button("Print All Remotes (Includes Path)", function()
    for i, v in pairs(game:GetDescendants()) do
        if v:IsA("RemoteEvent") then
            print("RemoteEvent: " .. v:GetFullName())
        elseif v:IsA("RemoteFunction") then
            print("RemoteFunction: " .. v:GetFullName())
        elseif v:IsA("UnreliableRemoteEvent") then
            print("UnreliableRemoteEvent: " .. v:GetFullName())
        end
    end
    discord:Notification("Success", "Check console by clicking F9 or typing '/console' in the chat", "Ok!")
    local input = loadstring(game:HttpGet("https://pastefy.app/bcbCZ5oO/raw",true))()
    input.press(Enum.KeyCode.F9)
end)
end)

